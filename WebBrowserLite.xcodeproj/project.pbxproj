// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		133CDDED154456200004073F /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 133CDDEC154456200004073F /* UIKit.framework */; };
		133CDDEF154456200004073F /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 133CDDEE154456200004073F /* Foundation.framework */; };
		133CDDF1154456200004073F /* CoreGraphics.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 133CDDF0154456200004073F /* CoreGraphics.framework */; };
		133CDDF7154456200004073F /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 133CDDF5154456200004073F /* InfoPlist.strings */; };
		133CDDF9154456200004073F /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 133CDDF8154456200004073F /* main.m */; };
		133CDDFD154456200004073F /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 133CDDFC154456200004073F /* AppDelegate.m */; };
		133CDE03154456200004073F /* ViewController_iPhone.xib in Resources */ = {isa = PBXBuildFile; fileRef = 133CDE01154456200004073F /* ViewController_iPhone.xib */; };
		133CDE06154456200004073F /* ViewController_iPad.xib in Resources */ = {isa = PBXBuildFile; fileRef = 133CDE04154456200004073F /* ViewController_iPad.xib */; };
		133CDE14154456580004073F /* WebBrowserLite.bundle in Resources */ = {isa = PBXBuildFile; fileRef = 133CDE11154456580004073F /* WebBrowserLite.bundle */; };
		133CDE15154456580004073F /* WebBrowserLite.m in Sources */ = {isa = PBXBuildFile; fileRef = 133CDE13154456580004073F /* WebBrowserLite.m */; };
		133CDE18154456C90004073F /* README.md in Resources */ = {isa = PBXBuildFile; fileRef = 133CDE17154456C90004073F /* README.md */; };
		13CE61E615572AD1000ED11C /* WebBrowserLite.h in Headers */ = {isa = PBXBuildFile; fileRef = 133CDE12154456580004073F /* WebBrowserLite.h */; settings = {ATTRIBUTES = (Public, ); }; };
		13CE61E715572ADA000ED11C /* WebBrowserLite.m in Sources */ = {isa = PBXBuildFile; fileRef = 133CDE13154456580004073F /* WebBrowserLite.m */; };
		13CE61E815572AE1000ED11C /* WebBrowserLite.bundle in Resources */ = {isa = PBXBuildFile; fileRef = 133CDE11154456580004073F /* WebBrowserLite.bundle */; };
		13CE61E915572B45000ED11C /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 133CDDEE154456200004073F /* Foundation.framework */; };
		13CE61EA15572B4B000ED11C /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 133CDDEC154456200004073F /* UIKit.framework */; };
		13CE61EC15572B51000ED11C /* QuartzCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 13CE61EB15572B51000ED11C /* QuartzCore.framework */; };
/* End PBXBuildFile section */

/* Begin PBXFileReference section */
		133CDDE8154456200004073F /* WebBrowserLite.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = WebBrowserLite.app; sourceTree = BUILT_PRODUCTS_DIR; };
		133CDDEC154456200004073F /* UIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = UIKit.framework; path = System/Library/Frameworks/UIKit.framework; sourceTree = SDKROOT; };
		133CDDEE154456200004073F /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = System/Library/Frameworks/Foundation.framework; sourceTree = SDKROOT; };
		133CDDF0154456200004073F /* CoreGraphics.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CoreGraphics.framework; path = System/Library/Frameworks/CoreGraphics.framework; sourceTree = SDKROOT; };
		133CDDF4154456200004073F /* WebBrowserLite-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "WebBrowserLite-Info.plist"; sourceTree = "<group>"; };
		133CDDF6154456200004073F /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		133CDDF8154456200004073F /* main.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = main.m; sourceTree = "<group>"; };
		133CDDFA154456200004073F /* WebBrowserLite-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "WebBrowserLite-Prefix.pch"; sourceTree = "<group>"; };
		133CDDFB154456200004073F /* AppDelegate.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = AppDelegate.h; sourceTree = "<group>"; };
		133CDDFC154456200004073F /* AppDelegate.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = AppDelegate.m; sourceTree = "<group>"; };
		133CDE02154456200004073F /* en */ = {isa = PBXFileReference; lastKnownFileType = file.xib; name = en; path = en.lproj/ViewController_iPhone.xib; sourceTree = "<group>"; };
		133CDE05154456200004073F /* en */ = {isa = PBXFileReference; lastKnownFileType = file.xib; name = en; path = en.lproj/ViewController_iPad.xib; sourceTree = "<group>"; };
		133CDE11154456580004073F /* WebBrowserLite.bundle */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.plug-in"; path = WebBrowserLite.bundle; sourceTree = "<group>"; };
		133CDE12154456580004073F /* WebBrowserLite.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = WebBrowserLite.h; sourceTree = "<group>"; };
		133CDE13154456580004073F /* WebBrowserLite.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = WebBrowserLite.m; sourceTree = "<group>"; };
		133CDE17154456C90004073F /* README.md */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = README.md; sourceTree = SOURCE_ROOT; };
		13CE61D415572A1E000ED11C /* libWebBrowserLite.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework.static; includeInIndex = 0; path = libWebBrowserLite.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		13CE61D815572A1E000ED11C /* libWebBrowserLite-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "libWebBrowserLite-Info.plist"; sourceTree = "<group>"; };
		13CE61DA15572A1E000ED11C /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		13CE61DC15572A1E000ED11C /* libWebBrowserLite-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "libWebBrowserLite-Prefix.pch"; sourceTree = "<group>"; };
		13CE61EB15572B51000ED11C /* QuartzCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = QuartzCore.framework; path = System/Library/Frameworks/QuartzCore.framework; sourceTree = SDKROOT; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		133CDDE5154456200004073F /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				133CDDED154456200004073F /* UIKit.framework in Frameworks */,
				133CDDEF154456200004073F /* Foundation.framework in Frameworks */,
				133CDDF1154456200004073F /* CoreGraphics.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		13CE61CE15572A1E000ED11C /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				13CE61EC15572B51000ED11C /* QuartzCore.framework in Frameworks */,
				13CE61EA15572B4B000ED11C /* UIKit.framework in Frameworks */,
				13CE61E915572B45000ED11C /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		133CDDDD154456200004073F = {
			isa = PBXGroup;
			children = (
				133CDDF2154456200004073F /* WebBrowserLite */,
				13CE61D615572A1E000ED11C /* libWebBrowserLite */,
				133CDDEB154456200004073F /* Frameworks */,
				133CDDE9154456200004073F /* Products */,
			);
			sourceTree = "<group>";
		};
		133CDDE9154456200004073F /* Products */ = {
			isa = PBXGroup;
			children = (
				133CDDE8154456200004073F /* WebBrowserLite.app */,
				13CE61D415572A1E000ED11C /* libWebBrowserLite.framework */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		133CDDEB154456200004073F /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				13CE61EB15572B51000ED11C /* QuartzCore.framework */,
				133CDDEC154456200004073F /* UIKit.framework */,
				133CDDEE154456200004073F /* Foundation.framework */,
				133CDDF0154456200004073F /* CoreGraphics.framework */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		133CDDF2154456200004073F /* WebBrowserLite */ = {
			isa = PBXGroup;
			children = (
				133CDE10154456580004073F /* Classes */,
				133CDDFB154456200004073F /* AppDelegate.h */,
				133CDDFC154456200004073F /* AppDelegate.m */,
				133CDE01154456200004073F /* ViewController_iPhone.xib */,
				133CDE04154456200004073F /* ViewController_iPad.xib */,
				133CDDF3154456200004073F /* Supporting Files */,
			);
			path = WebBrowserLite;
			sourceTree = "<group>";
		};
		133CDDF3154456200004073F /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				133CDE17154456C90004073F /* README.md */,
				133CDDF4154456200004073F /* WebBrowserLite-Info.plist */,
				133CDDF5154456200004073F /* InfoPlist.strings */,
				133CDDF8154456200004073F /* main.m */,
				133CDDFA154456200004073F /* WebBrowserLite-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		133CDE10154456580004073F /* Classes */ = {
			isa = PBXGroup;
			children = (
				133CDE11154456580004073F /* WebBrowserLite.bundle */,
				133CDE12154456580004073F /* WebBrowserLite.h */,
				133CDE13154456580004073F /* WebBrowserLite.m */,
			);
			path = Classes;
			sourceTree = "<group>";
		};
		13CE61D615572A1E000ED11C /* libWebBrowserLite */ = {
			isa = PBXGroup;
			children = (
				13CE61D715572A1E000ED11C /* Supporting Files */,
			);
			path = libWebBrowserLite;
			sourceTree = "<group>";
		};
		13CE61D715572A1E000ED11C /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				13CE61D815572A1E000ED11C /* libWebBrowserLite-Info.plist */,
				13CE61D915572A1E000ED11C /* InfoPlist.strings */,
				13CE61DC15572A1E000ED11C /* libWebBrowserLite-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		13CE61CF15572A1E000ED11C /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				13CE61E615572AD1000ED11C /* WebBrowserLite.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXNativeTarget section */
		133CDDE7154456200004073F /* WebBrowserLite */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 133CDE09154456200004073F /* Build configuration list for PBXNativeTarget "WebBrowserLite" */;
			buildPhases = (
				133CDDE4154456200004073F /* Sources */,
				133CDDE5154456200004073F /* Frameworks */,
				133CDDE6154456200004073F /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = WebBrowserLite;
			productName = WebBrowserLite;
			productReference = 133CDDE8154456200004073F /* WebBrowserLite.app */;
			productType = "com.apple.product-type.application";
		};
		13CE61D315572A1E000ED11C /* libWebBrowserLite */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 13CE61DF15572A1E000ED11C /* Build configuration list for PBXNativeTarget "libWebBrowserLite" */;
			buildPhases = (
				13CE61CC15572A1E000ED11C /* ShellScript */,
				13CE61CD15572A1E000ED11C /* Sources */,
				13CE61CE15572A1E000ED11C /* Frameworks */,
				13CE61CF15572A1E000ED11C /* Headers */,
				13CE61D015572A1E000ED11C /* Resources */,
				13CE61D115572A1E000ED11C /* ShellScript */,
				13CE61D215572A1E000ED11C /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = libWebBrowserLite;
			productName = libWebBrowserLite;
			productReference = 13CE61D415572A1E000ED11C /* libWebBrowserLite.framework */;
			productType = "com.apple.product-type.framework.static";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		133CDDDF154456200004073F /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0430;
				ORGANIZATIONNAME = Prioregroup.com;
			};
			buildConfigurationList = 133CDDE2154456200004073F /* Build configuration list for PBXProject "WebBrowserLite" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = 133CDDDD154456200004073F;
			productRefGroup = 133CDDE9154456200004073F /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				133CDDE7154456200004073F /* WebBrowserLite */,
				13CE61D315572A1E000ED11C /* libWebBrowserLite */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		133CDDE6154456200004073F /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				133CDDF7154456200004073F /* InfoPlist.strings in Resources */,
				133CDE03154456200004073F /* ViewController_iPhone.xib in Resources */,
				133CDE06154456200004073F /* ViewController_iPad.xib in Resources */,
				133CDE14154456580004073F /* WebBrowserLite.bundle in Resources */,
				133CDE18154456C90004073F /* README.md in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		13CE61D015572A1E000ED11C /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				13CE61E815572AE1000ED11C /* WebBrowserLite.bundle in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		13CE61CC15572A1E000ED11C /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n\tUFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version  from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n   [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n   [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n  ([[ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]] || \\\n    ([[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && \\\n     [[ -f \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && \\\n     [[ ! \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\n    )\n  )\nthen\n    exit 0\nfi\n\n\n# Clean other platform if needed\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n\techo \"Platform \\\"$UFW_SDK_PLATFORM\\\" was cleaned recently. Cleaning \\\"$UFW_OTHER_PLATFORM\\\" as well\"\n\techo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\n\txcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" clean\nfi\n\n\n# Make sure we are building from fresh binaries\n\nrm -rf \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\n\nif [[ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]]\nthen\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    rm -rf \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nfi\n";
		};
		13CE61D115572A1E000ED11C /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "INLINED_PYHON_SCRIPT=\"import sys; import os.path; headerPathFromFind = sys.argv[2]; srcRoot = sys.argv[1]; headerPathFromFindWithoutFilename = os.path.dirname( headerPathFromFind ); relatedPathForDirectory = os.path.relpath( headerPathFromFindWithoutFilename, srcRoot ); print( relatedPathForDirectory );\"\n\nHEADERS_ROOT=$SRCROOT/$PRODUCT_NAME\nFRAMEWORK_HEADERS_DIR=\"$BUILT_PRODUCTS_DIR/$WRAPPER_NAME/Headers\"\n\n## only header files expected at this point\nPUBLIC_HEADERS=$( ls -1 \"$FRAMEWORK_HEADERS_DIR\" )\n\n\nfor PUBLIC_HEADER in $PUBLIC_HEADERS; do\n\n   FIND_RESULT=$( find \"$HEADERS_ROOT\" -name \"$PUBLIC_HEADER\" )\n   RELATIVE_PATH=$( python -c \"$INLINED_PYHON_SCRIPT\" \"$HEADERS_ROOT\" \"$FIND_RESULT\" )\n\n   mkdir -p \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH\"\n   mv \"$FRAMEWORK_HEADERS_DIR/$PUBLIC_HEADER\" \"$FRAMEWORK_HEADERS_DIR/$RELATIVE_PATH/$PUBLIC_HEADER\"\ndone\n";
		};
		13CE61D215572A1E000ED11C /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\n\nset +u\nif [[ $UFW_MASTER_SCRIPT_RUNNING ]]\nthen\n    # Nothing for the slave script to do\n    exit 0\nfi\nset -u\nexport UFW_MASTER_SCRIPT_RUNNING=1\n\n\n# Functions\n\n## List files in the specified directory, storing to the specified array.\n#\n# @param $1 The path to list\n# @param $2 The name of the array to fill\n#\n##\nlist_files ()\n{\n    filelist=$(ls \"$1\")\n    while read line\n    do\n        eval \"$2[\\${#$2[*]}]=\\\"\\$line\\\"\"\n    done <<< \"$filelist\"\n}\n\n\n# Sanity check\n\nif [[ ! -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]]\nthen\n    echo \"Framework target \\\"${TARGET_NAME}\\\" had no source files to build from. Make sure your source files have the correct target membership\"\n    exit 1\nfi\n\n\n# Gather information\n\nif [[ \"$SDK_NAME\" =~ ([A-Za-z]+) ]]\nthen\n    UFW_SDK_PLATFORM=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find platform name from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$SDK_NAME\" =~ ([0-9]+.*$) ]]\nthen\n    UFW_SDK_VERSION=${BASH_REMATCH[1]}\nelse\n    echo \"Could not find sdk version from SDK_NAME: $SDK_NAME\"\n    exit 1\nfi\n\nif [[ \"$UFW_SDK_PLATFORM\" = \"iphoneos\" ]]\nthen\n    UFW_OTHER_PLATFORM=iphonesimulator\nelse\n    UFW_OTHER_PLATFORM=iphoneos\nfi\n\nif [[ \"$BUILT_PRODUCTS_DIR\" =~ (.*)$UFW_SDK_PLATFORM$ ]]\nthen\n    UFW_OTHER_BUILT_PRODUCTS_DIR=\"${BASH_REMATCH[1]}${UFW_OTHER_PLATFORM}\"\nelse\n    echo \"Could not find $UFW_SDK_PLATFORM in $BUILT_PRODUCTS_DIR\"\n    exit 1\nfi\n\nONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM:-$ONLY_ACTIVE_ARCH}\n\n# Short-circuit if all binaries are up to date.\n# We already checked the other platform in the prerun script.\n\nif [[ -f \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" ]] && [[ -f \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]] && [[ ! \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -nt \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/${EXECUTABLE_PATH}\" ]]\nthen\n    exit 0\nfi\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" == \"YES\" ]\nthen\n    echo \"ONLY_ACTIVE_PLATFORM=${ONLY_ACTIVE_PLATFORM}: Skipping other platform build\"\nelse\n    # Make sure the other platform gets built\n    \n    echo \"Build other platform\"\n    \n    echo xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    xcodebuild -project \"${PROJECT_FILE_PATH}\" -target \"${TARGET_NAME}\" -configuration \"${CONFIGURATION}\" -sdk ${UFW_OTHER_PLATFORM}${UFW_SDK_VERSION} BUILD_DIR=\"${BUILD_DIR}\" CONFIGURATION_TEMP_DIR=\"${PROJECT_TEMP_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\" $ACTION\n    \n    \n    # Build the fat static library binary\n    \n    echo \"Create universal static library\"\n    \n    echo \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \"$PLATFORM_DEVELOPER_BIN_DIR/libtool\" -static \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${UFW_OTHER_BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" -o \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\"\n    \n    echo mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\n    mv \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}.temp\" \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\"\nfi\n\n# Build embedded framework structure\n\necho \"Build Embedded Framework\"\n\necho rm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\nrm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework\"\necho mkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\nmkdir -p \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources\"\necho cp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\ncp -a \"${BUILT_PRODUCTS_DIR}/${WRAPPER_NAME}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/\"\n\ndeclare -a UFW_FILE_LIST\nlist_files \"${BUILT_PRODUCTS_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}\" UFW_FILE_LIST\nfor filename in \"${UFW_FILE_LIST[@]}\"\ndo\n    if [[ \"${filename}\" != \"Info.plist\" ]] && [[ ! \"${filename}\" =~ .*\\.lproj$ ]]\n    then\n        echo ln -sf \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n        ln -sf \"../${WRAPPER_NAME}/Resources/${filename}\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.embeddedframework/Resources/${filename}\"\n    fi\ndone\n\n\nif [ \"${ONLY_ACTIVE_PLATFORM}\" != \"YES\" ]\nthen\n    # Replace other platform's framework with a copy of this one (so that both have the same universal binary)\n    \n    echo \"Copy from $UFW_SDK_PLATFORM to $UFW_OTHER_PLATFORM\"\n    \n    echo rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    rm -rf \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    echo cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\n    cp -a \"${BUILD_DIR}/${CONFIGURATION}-${UFW_SDK_PLATFORM}\" \"${BUILD_DIR}/${CONFIGURATION}-${UFW_OTHER_PLATFORM}\"\nfi\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		133CDDE4154456200004073F /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				133CDDF9154456200004073F /* main.m in Sources */,
				133CDDFD154456200004073F /* AppDelegate.m in Sources */,
				133CDE15154456580004073F /* WebBrowserLite.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		13CE61CD15572A1E000ED11C /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				13CE61E715572ADA000ED11C /* WebBrowserLite.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXVariantGroup section */
		133CDDF5154456200004073F /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				133CDDF6154456200004073F /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
		133CDE01154456200004073F /* ViewController_iPhone.xib */ = {
			isa = PBXVariantGroup;
			children = (
				133CDE02154456200004073F /* en */,
			);
			name = ViewController_iPhone.xib;
			sourceTree = "<group>";
		};
		133CDE04154456200004073F /* ViewController_iPad.xib */ = {
			isa = PBXVariantGroup;
			children = (
				133CDE05154456200004073F /* en */,
			);
			name = ViewController_iPad.xib;
			sourceTree = "<group>";
		};
		13CE61D915572A1E000ED11C /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				13CE61DA15572A1E000ED11C /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		133CDE07154456200004073F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 3.2;
				SDKROOT = iphoneos;
				TARGETED_DEVICE_FAMILY = "1,2";
			};
			name = Debug;
		};
		133CDE08154456200004073F /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_32_BIT)";
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_VERSION = com.apple.compilers.llvm.clang.1_0;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 3.2;
				OTHER_CFLAGS = "-DNS_BLOCK_ASSERTIONS=1";
				SDKROOT = iphoneos;
				TARGETED_DEVICE_FAMILY = "1,2";
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
		133CDE0A154456200004073F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = (
					"$(ARCHS_STANDARD_32_BIT)",
					armv6,
				);
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "WebBrowserLite/WebBrowserLite-Prefix.pch";
				INFOPLIST_FILE = "WebBrowserLite/WebBrowserLite-Info.plist";
				PRODUCT_NAME = "$(TARGET_NAME)";
				WRAPPER_EXTENSION = app;
			};
			name = Debug;
		};
		133CDE0B154456200004073F /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = (
					"$(ARCHS_STANDARD_32_BIT)",
					armv6,
				);
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "WebBrowserLite/WebBrowserLite-Prefix.pch";
				INFOPLIST_FILE = "WebBrowserLite/WebBrowserLite-Info.plist";
				PRODUCT_NAME = "$(TARGET_NAME)";
				WRAPPER_EXTENSION = app;
			};
			name = Release;
		};
		13CE61DD15572A1E000ED11C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = (
					armv6,
					"$(ARCHS_STANDARD_32_BIT)",
				);
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "libWebBrowserLite/libWebBrowserLite-Prefix.pch";
				INFOPLIST_FILE = "libWebBrowserLite/libWebBrowserLite-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 3.2;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SKIP_INSTALL = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		13CE61DE15572A1E000ED11C /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = (
					armv6,
					"$(ARCHS_STANDARD_32_BIT)",
				);
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "libWebBrowserLite/libWebBrowserLite-Prefix.pch";
				INFOPLIST_FILE = "libWebBrowserLite/libWebBrowserLite-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 3.2;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SKIP_INSTALL = YES;
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		133CDDE2154456200004073F /* Build configuration list for PBXProject "WebBrowserLite" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				133CDE07154456200004073F /* Debug */,
				133CDE08154456200004073F /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		133CDE09154456200004073F /* Build configuration list for PBXNativeTarget "WebBrowserLite" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				133CDE0A154456200004073F /* Debug */,
				133CDE0B154456200004073F /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		13CE61DF15572A1E000ED11C /* Build configuration list for PBXNativeTarget "libWebBrowserLite" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				13CE61DD15572A1E000ED11C /* Debug */,
				13CE61DE15572A1E000ED11C /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 133CDDDF154456200004073F /* Project object */;
}
